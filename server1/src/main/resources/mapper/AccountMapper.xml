<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server1.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="com.example.server1.model.Account">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="number" column="number" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="freeze" column="freeze" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,number,name,
        freeze
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from account
        where  id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from account
        where  id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.server1.model.Account" useGeneratedKeys="true">
        insert into account
        ( id,number,name
        ,freeze)
        values (#{id,jdbcType=INTEGER},#{number,jdbcType=INTEGER},#{name,jdbcType=VARCHAR}
        ,#{freeze,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.server1.model.Account" useGeneratedKeys="true">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="number != null">number,</if>
                <if test="name != null">name,</if>
                <if test="freeze != null">freeze,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="number != null">#{number,jdbcType=INTEGER},</if>
                <if test="name != null">#{name,jdbcType=VARCHAR},</if>
                <if test="freeze != null">#{freeze,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.server1.model.Account">
        update account
        <set>
                <if test="number != null">
                    number = #{number,jdbcType=INTEGER},
                </if>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="freeze != null">
                    freeze = #{freeze,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.server1.model.Account">
        update account
        set
            number =  #{number,jdbcType=INTEGER},
            name =  #{name,jdbcType=VARCHAR},
            freeze =  #{freeze,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
